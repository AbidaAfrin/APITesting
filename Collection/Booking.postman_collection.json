{
	"info": {
		"_postman_id": "5a6c149a-4641-4b3e-848c-d374a0283894",
		"name": "Booking",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32395021",
		"_collection_link": "https://lunar-desert-390623.postman.co/workspace/Booking~526b3452-8ea8-4022-98a1-fb4b4284fff1/collection/32395021-5a6c149a-4641-4b3e-848c-d374a0283894?action=share&source=collection_link&creator=32395021"
	},
	"item": [
		{
			"name": "Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.environment.set(\"id\",jsonData.bookingid)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"lastName\",lastName)\r",
							"\r",
							"//Date\r",
							"const date = require('moment')\r",
							"const today = date()\r",
							"//console.log(today.format(\"YYYY-MM-DD\"))\r",
							"let number = Math.random()*10;\r",
							"var checkin = today.add(number,'d').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkin\",checkin)\r",
							"console.log(checkin)\r",
							"\r",
							"let number1 = Math.random()*100;\r",
							"var checkout = today.add(number1,'d').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkout\",checkout)\r",
							"console.log(checkout)\r",
							"\r",
							"\r",
							"//Total price\r",
							"let total_price = Math.round(pm.variables.replaceIn(\"{{$randomPrice}}\")*5)\r",
							"console.log(total_price)\r",
							"pm.environment.set(\"totalprice\",total_price)\r",
							"\r",
							"//Bookingpaid\r",
							"let bookingpaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(bookingpaid)\r",
							"pm.environment.set(\"bookingpaid\",bookingpaid)\r",
							"\r",
							"//additionalneeds\r",
							"let additionalneeds = pm.variables.replaceIn(\"{{$randomProduct}}\")\r",
							"console.log(additionalneeds)\r",
							"pm.environment.set(\"additionalneeds\",additionalneeds)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalprice}},\r\n\t\"depositpaid\" : {{bookingpaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkin}}\",\r\n    \t\"checkout\" : \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{additionalneeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var statusCode = pm.response.code\r",
							"console.log(statusCode)\r",
							"\r",
							"switch(statusCode){\r",
							"    case 200:\r",
							"        var jsonData = pm.response.json()\r",
							"\r",
							"        pm.test(\"Status code is 200\", function () {\r",
							"            pm.response.to.have.status(200);\r",
							"        });\r",
							"\r",
							"        pm.test(\"First Name Validation\",function(){\r",
							"            pm.expect(pm.environment.get(\"firstName\")).to.eql(jsonData.firstname)\r",
							"        })\r",
							"\r",
							"        pm.test(\"Last Name Validation\",function(){\r",
							"            pm.expect(pm.environment.get(\"lastName\")).to.eql(jsonData.lastname)\r",
							"        })\r",
							"\r",
							"        //Checkin\r",
							"        pm.test(\"Checkin Validation\",function(){\r",
							"            pm.expect(pm.environment.get(\"checkin\")).to.eql(jsonData.bookingdates.checkin)\r",
							"        })\r",
							"\r",
							"        //Checkout\r",
							"        pm.test(\"Checkout Validation\",function(){\r",
							"            pm.expect(pm.environment.get(\"checkout\")).to.eql(jsonData.bookingdates.checkout)\r",
							"        })\r",
							"\r",
							"        //total price test\r",
							"        pm.test(\"Total price validation\",function(){\r",
							"                pm.expect(pm.environment.get(\"totalprice\")).to.eql(jsonData.totalprice)\r",
							"        })\r",
							"\r",
							"        //Booking paid or not\r",
							"        pm.test(\"Deposit paid validation\",function(){\r",
							"            pm.expect(pm.environment.get(\"bookingpaid\")).to.eql(jsonData.depositpaid.toString())\r",
							"        })\r",
							"\r",
							"        //Additionalneeds validation\r",
							"        pm.test(\"Additionalneeds Validation\",function(){\r",
							"            pm.expect(pm.environment.get(\"additionalneeds\")).to.eql(jsonData.additionalneeds.toString())\r",
							"        })\r",
							"        break;\r",
							"    case 404:\r",
							"        pm.test(\"Not Found\")\r",
							"        break;\r",
							"    case 500:\r",
							"        pm.test(\"Internal Server Error\")\r",
							"        break;\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": [
				{
					"name": "Get",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								""
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"firstname\": \"Nichole\",\r\n    \"lastname\": \"Toy\",\r\n    \"totalprice\": 4169,\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2024-05-04\",\r\n        \"checkout\": \"2024-05-06\"\r\n    },\r\n    \"additionalneeds\": \"Pants\"\r\n}"
				}
			]
		},
		{
			"name": "Authorized",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let json = pm.response.json()\r",
							"\r",
							"pm.environment.set(\"token\",json.token)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/auth",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": [
				{
					"name": "Authorized",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/auth",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"auth"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"token\": \"f1cae2611dfb13e\"\r\n}"
				}
			]
		},
		{
			"name": "Update",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"lastName\",lastName)\r",
							"\r",
							"//Date\r",
							"const date = require('moment')\r",
							"const today = date()\r",
							"//console.log(today.format(\"YYYY-MM-DD\"))\r",
							"let number = Math.random()*10;\r",
							"var checkin = today.add(number,'d').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkin\",checkin)\r",
							"console.log(checkin)\r",
							"\r",
							"let number1 = Math.random()*100;\r",
							"var checkout = today.add(number1,'d').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkout\",checkout)\r",
							"console.log(checkout)\r",
							"\r",
							"\r",
							"//Total price\r",
							"let total_price = Math.round(pm.variables.replaceIn(\"{{$randomPrice}}\")*5)\r",
							"console.log(total_price)\r",
							"pm.environment.set(\"totalprice\",total_price)\r",
							"\r",
							"//Bookingpaid\r",
							"let bookingpaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(bookingpaid)\r",
							"pm.environment.set(\"bookingpaid\",bookingpaid)\r",
							"\r",
							"//additionalneeds\r",
							"let additionalneeds = pm.variables.replaceIn(\"{{$randomProduct}}\")\r",
							"console.log(additionalneeds)\r",
							"pm.environment.set(\"additionalneeds\",additionalneeds)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var code = pm.response.code\r",
							"console.log(code)\r",
							"\r",
							"if(code==401 || code==403)\r",
							"    pm.test(\"Access token Needed\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text",
						"uuid": "16343b2f-2f43-4ce8-a93c-f51f3d27e8d5"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalprice}},\r\n\t\"depositpaid\" : {{bookingpaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkin}}\",\r\n    \t\"checkout\" : \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{additionalneeds}}\"\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify after update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var status = pm.response.code\r",
							"console.log(status)\r",
							"if(status==200){\r",
							"        var jsonData = pm.response.json()\r",
							"\r",
							"        pm.test(\"Status code is 200\", function () {\r",
							"            pm.response.to.have.status(200);\r",
							"        });\r",
							"\r",
							"        pm.test(\"First Name Validation\",function(){\r",
							"            pm.expect(pm.environment.get(\"firstName\")).to.eql(jsonData.firstname)\r",
							"        })\r",
							"\r",
							"        pm.test(\"Last Name Validation\",function(){\r",
							"            pm.expect(pm.environment.get(\"lastName\")).to.eql(jsonData.lastname)\r",
							"        })\r",
							"\r",
							"        //Checkin\r",
							"        pm.test(\"Checkin Validation\",function(){\r",
							"            pm.expect(pm.environment.get(\"checkin\")).to.eql(jsonData.bookingdates.checkin)\r",
							"        })\r",
							"\r",
							"        //Checkout\r",
							"        pm.test(\"Checkout Validation\",function(){\r",
							"            pm.expect(pm.environment.get(\"checkout\")).to.eql(jsonData.bookingdates.checkout)\r",
							"        })\r",
							"\r",
							"        //total price test\r",
							"        pm.test(\"Total price validation\",function(){\r",
							"                pm.expect(pm.environment.get(\"totalprice\")).to.eql(jsonData.totalprice)\r",
							"        })\r",
							"\r",
							"        //Booking paid or not\r",
							"        pm.test(\"Deposit paid validation\",function(){\r",
							"            pm.expect(pm.environment.get(\"bookingpaid\")).to.eql(jsonData.depositpaid.toString())\r",
							"        })\r",
							"\r",
							"        //Additionalneeds validation\r",
							"        pm.test(\"Additionalneeds Validation\",function(){\r",
							"            pm.expect(pm.environment.get(\"additionalneeds\")).to.eql(jsonData.additionalneeds.toString())\r",
							"        })\r",
							"}else if(status==404){\r",
							"    pm.test(\"Not Found\")\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": [
				{
					"name": "Verify after update",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								""
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"firstname\": \"Sabrina\",\r\n    \"lastname\": \"Ritchie\",\r\n    \"totalprice\": 4190,\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2024-05-10\",\r\n        \"checkout\": \"2024-07-05\"\r\n    },\r\n    \"additionalneeds\": \"Tuna\"\r\n}"
				}
			]
		},
		{
			"name": "Delete",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text",
						"uuid": "f257b793-36d6-4e19-a05f-ef32df87da86"
					}
				],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/{{id}}",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify after delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": [
				{
					"name": "Verify after delete",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								""
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "Not Found"
				}
			]
		}
	]
}